/*!
// XUI
// Copyright (c) 2017-2025 Grigore Stefan <g_stefan@yahoo.com>
// MIT License (MIT) <http://opensource.org/licenses/MIT>
// SPDX-FileCopyrightText: 2017-2025 Grigore Stefan <g_stefan@yahoo.com>
// SPDX-License-Identifier: MIT
*/

@charset "UTF-8";
@use "sass:map";

@use "table.source" as *;

@layer components {
	.xui-table {
		position: relative;
		box-sizing: border-box;
		font-size: 16px;
		line-height: 20px;
		font-weight: normal;
		width: auto;
		padding-top: 0px;
		padding-right: 0px;
		padding-bottom: 0px;
		padding-left: 0px;
		margin-top: 0px;
		margin-right: 0px;
		margin-bottom: 0px;
		margin-left: 0px;
		border: 0px solid #000000;
		border-spacing: 0px;
		border-collapse: separate;

		& > thead,
		& > thead > tr,
		& > tbody,
		& > tbody > tr {
			width: 100%;
		}

		& > thead {
			& > tr > th {
				font-size: 16px;
				line-height: 24px;
				font-weight: normal;
				box-sizing: border-box;
				border-right: 0px solid #000000;
				border-bottom: 0px solid #000000;
				padding-top: 4px;
				padding-right: 8px;
				padding-bottom: 4px;
				padding-left: 8px;
				box-sizing: border-box;
			}

			& > tr > th:last-child {
				border-bottom: 0px solid #000000;
			}

			& > tr:first-child > th:first-child {
				border-top-left-radius: 3px;
				border-top-right-radius: 0px;
				border-bottom-left-radius: 0px;
				border-bottom-right-radius: 0px;
			}

			& > tr:first-child > th:last-child {
				border-top-left-radius: 0px;
				border-top-right-radius: 3px;
				border-bottom-left-radius: 0px;
				border-bottom-right-radius: 0px;
			}
		}

		& > tbody {
			& > tr > td {
				border-right: 0px solid #000000;
				border-bottom: 0px solid #000000;
				padding-top: 4px;
				padding-right: 4px;
				padding-bottom: 4px;
				padding-left: 4px;
				box-sizing: border-box;
			}

			& > tr:last-child > td:first-child {
				border-top-left-radius: 0px;
				border-top-right-radius: 0px;
				border-bottom-left-radius: 3px;
				border-bottom-right-radius: 0px;
			}

			& > tr:last-child > td:last-child {
				border-top-left-radius: 0px;
				border-top-right-radius: 0px;
				border-bottom-left-radius: 0px;
				border-bottom-right-radius: 3px;
			}
		}

		& > thead > tr > th {
			color: map.get($table, "head-text-color");
		}

		& > thead > tr {
			background-color: map.get($table, "background-color");
		}

		& > tbody > tr {
			background-color: map.get($table, "background-color");
			color: map.get($table, "text-color");
		}

		& > thead > tr > th {
			border-top: 1px solid map.get($table, "border-color");
			border-left: 1px solid map.get($table, "border-color");
			color: map.get($table, "text-color");
		}

		& > thead > tr > th:last-child {
			border-top: 1px solid map.get($table, "border-color");
			border-left: 1px solid map.get($table, "border-color");
			border-right: 1px solid map.get($table, "border-color");
		}

		& > tbody > tr > td {
			border-top: 1px solid map.get($table, "border-color");
			border-left: 1px solid map.get($table, "border-color");
		}

		& > tbody > tr > td:last-child {
			border-top: 1px solid map.get($table, "border-color");
			border-left: 1px solid map.get($table, "border-color");
			border-right: 1px solid map.get($table, "border-color");
		}

		& > tbody > tr:nth-child(even) {
			background-color: map.get($table, "even-background-color");
		}

		& > tbody > tr:last-child > td {
			border-bottom: 1px solid map.get($table, "border-color");
		}

		&.--hover > tbody {
			& > tr:hover > td {
				border-top: 1px solid map.get($table, "hover-border-color");
				border-bottom: 1px solid map.get($table, "hover-border-color");
			}

			& > tr:hover + tr > td {
				border-top: 0px solid map.get($table, "hover-border-color");
			}

			& > tr:hover > td:first-child {
				border-top: 1px solid map.get($table, "hover-border-color");
				border-left: 1px solid map.get($table, "hover-border-color");
			}

			& > tr:hover > td:last-child {
				border-top: 1px solid map.get($table, "hover-border-color");
				border-right: 1px solid map.get($table, "hover-border-color");
			}

			& > tr:last-child:hover > td {
				border-bottom: 1px solid map.get($table, "hover-border-color");
			}
		}

		&.--sticky-first-row-and-column {
			& > thead > tr > th:first-child {
				border-right: 1px solid map.get($table, "border-color") !important;
			}

			& > thead > tr > th:nth-child(2) {
				border-left: 0px solid map.get($table, "border-color") !important;
			}

			& > tbody > tr > td:first-child {
				border-right: 1px solid map.get($table, "border-color") !important;
			}

			& > tbody > tr > td:nth-child(2) {
				border-left: 0px solid map.get($table, "border-color") !important;
			}
		}

		&.--sticky-head > thead > tr > th {
			position: sticky !important;
			z-index: 3;
			top: 0;
			background-color: #ffffff;
		}

		&.--sticky-first-row-and-column {
			& > thead > tr > th {
				position: sticky !important;
				z-index: 3;
				top: 0;
				background-color: #ffffff;
			}

			& > thead > tr > th:first-child {
				left: 0;
				z-index: 4;
			}

			& > tbody > tr > td:first-child {
				position: sticky !important;
				left: 0;
				z-index: 2;
				background-color: #ffffff;
			}
		}
	}

	// ---

	.xui-table.--border-on-table {
		border-radius: 3px;
		overflow: hidden;

		& > thead {
			& > tr:first-child > th:first-child {
				border-top-left-radius: 0px;
			}

			& > tr:first-child > th:last-child {
				border-top-right-radius: 0px;
			}
		}

		& > tbody {
			& > tr:last-child > td:first-child {
				border-bottom-left-radius: 0px;
			}

			& > tr:last-child > td:last-child {
				border-bottom-right-radius: 0px;
			}
		}

		border: 1px solid map.get($table, "border-color");

		& > thead > tr > th {
			border-top: 0px solid map.get($table, "border-color");
		}

		& > thead > tr > th:first-child {
			border-left: 0px solid map.get($table, "border-color");
		}

		& > thead > tr > th:last-child {
			border-top: 0px solid map.get($table, "border-color");
			border-right: 0px solid map.get($table, "border-color");
		}

		& > tbody > tr > td:first-child {
			border-left: 0px solid map.get($table, "border-color");
		}

		& > tbody > tr > td:last-child {
			border-right: 0px solid map.get($table, "border-color");
		}

		& > tbody > tr:last-child > td {
			border-bottom: 0px solid map.get($table, "border-color");
		}

		&.--hover > tbody {
			& > tr:hover > td:first-child {
				border-left: 0px solid map.get($table, "hover-border-color");
			}

			& > tr:hover > td:last-child {
				border-right: 0px solid map.get($table, "hover-border-color");
			}

			& > tr:last-child:hover > td {
				border-bottom: 0px solid map.get($table, "hover-border-color");
			}
		}
	}

	// ---

	.xui-table.--no-border {
		& > thead {
			& > tr:first-child > th:first-child {
				border-top-left-radius: 0px;
			}

			& > tr:first-child > th:last-child {
				border-top-right-radius: 0px;
			}
		}

		& > tbody {
			& > tr:last-child > td:first-child {
				border-bottom-left-radius: 0px;
			}

			& > tr:last-child > td:last-child {
				border-bottom-right-radius: 0px;
			}
		}

		border: 0px solid map.get($table, "border-color");

		& > thead > tr > th {
			border-top: 0px solid map.get($table, "border-color");
		}

		& > thead > tr > th:first-child {
			border-left: 0px solid map.get($table, "border-color");
		}

		& > thead > tr > th:last-child {
			border-top: 0px solid map.get($table, "border-color");
			border-right: 0px solid map.get($table, "border-color");
		}

		& > tbody > tr > td:first-child {
			border-left: 0px solid map.get($table, "border-color");
		}

		& > tbody > tr > td:last-child {
			border-right: 0px solid map.get($table, "border-color");
		}

		& > tbody > tr:last-child > td {
			border-bottom: 0px solid map.get($table, "border-color");
		}

		&.--hover > tbody {
			& > tr:hover > td:first-child {
				border-left: 0px solid map.get($table, "hover-border-color");
			}

			& > tr:hover > td:last-child {
				border-right: 0px solid map.get($table, "hover-border-color");
			}

			& > tr:last-child:hover > td {
				border-bottom: 0px solid map.get($table, "hover-border-color");
			}
		}
	}

	// ---

	.xui-table.--no-vertical-inner-border {
		border: 0px solid map.get($table, "border-color");

		& > thead > tr > th {
			border-left: 0px solid map.get($table, "border-color");
		}

		& > thead > tr > th:first-child {
			border-left: 1px solid map.get($table, "border-color");
		}

		& > tbody > tr > td {
			border-left: 0px solid map.get($table, "border-color");
		}

		& > tbody > tr > td:first-child {
			border-left: 1px solid map.get($table, "border-color");
		}

		&.--hover > tbody {
			& > tr:hover > td {
				border-left: 0px solid map.get($table, "hover-border-color");
			}

			& > tr:hover > td:first-child {
				border-left: 1px solid map.get($table, "hover-border-color");
			}
		}
	}
}
