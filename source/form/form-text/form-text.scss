/*!
// XUI
// Copyright (c) 2017-2025 Grigore Stefan <g_stefan@yahoo.com>
// MIT License (MIT) <http://opensource.org/licenses/MIT>
// SPDX-FileCopyrightText: 2017-2025 Grigore Stefan <g_stefan@yahoo.com>
// SPDX-License-Identifier: MIT
*/

@charset "UTF-8";
@use "sass:map";

@use "../form-input" as *;
@use "form-text.source" as *;

input.xui-form-text {
	box-sizing: border-box;
	margin: 0px;

	font-family: "Roboto", sans-serif;
	font-size: 16px;
	line-height: 20px;
	font-weight: normal;

	width: 100%;
	height: 32px;

	padding-top: 5px;
	padding-right: 6px;
	padding-bottom: 5px;
	padding-left: 6px;
	
	border-radius: 3px;
	outline: none;

	transition: border 0.3s ease, box-shadow 0.3s ease;

	background-color: #FFFFFF;

	@each $type, $value in $formInputType {
		$class: if($type == "default","",".--#{$type}");

		&#{$class} {
			border: 1px solid map.get($form-text,"#{$type}-normal-bd");
			color: map.get($form-text,"#{$type}-normal-fg");
	
			&:focus {
				box-shadow: 0px 0px 0px 2px color-mix(in srgb, map.get($form-text,"focus-bd-shadow") 20%, transparent);
				border: 1px solid map.get($form-text,"focus-bd");
				color: map.get($form-text,"#{$type}-focus-fg");
			}
		}
	}

	&.--medium {
		padding-top: 5px;
		padding-right: 5px;
		padding-bottom: 5px;
		padding-left: 5px;
		height: 30px;
	}

	&.--small {
		font-size: 14px;
		line-height: 18px;
		padding-top: 2px;
		padding-right: 3px;
		padding-bottom: 2px;
		padding-left: 3px;
		height: 24px;	
	}

	&::placeholder {
		color: map.get($form-text,"placeholder");
		opacity: 1;
	}
}

div.xui-form-text {
	position: relative;
	display: inline-block;
	width: 100%;

	&.--compact {
		width: auto;
	}

	& > input {
		box-sizing: border-box;
		margin: 0px;

		font-family: "Roboto", sans-serif;
		font-size: 16px;
		line-height: 20px;
		font-weight: normal;

		width: 100%;
		height: 32px;

		padding-top: 5px;
		padding-right: 6px;
		padding-bottom: 5px;
		padding-left: 6px;
	
		border-radius: 3px;
		outline: none;

		background-color: #FFFFFF;

		transition: border 0.3s ease, box-shadow 0.3s ease;

		&::placeholder {
			color: map.get($form-text,"placeholder");
			opacity: 1;
		}
	}

	& > i,
	& > svg {
		display: block;
		position: absolute;
		top: 4px;
		left: 4px;
		right: auto;
		font-size: 24px;
		line-height: 24px;
		transition: color 0.3s ease;
	}

	@each $type, $value in $formInputType {
		$class: if($type == "default","",".--#{$type}");

		&#{$class} > input {
			border: 1px solid map.get($form-text,"#{$type}-normal-bd");
			color: map.get($form-text,"#{$type}-normal-fg");

			&:focus {
				box-shadow: 0px 0px 0px 2px color-mix(in srgb, map.get($form-text,"focus-bd-shadow") 20%, transparent);
				border: 1px solid map.get($form-text,"focus-bd");
				color: map.get($form-text,"#{$type}-focus-fg");
			}
		}

		&#{$class} > i,
		&#{$class} > svg {
			color: map.get($form-text,"#{$type}-normal-icon");
		}

		&#{$class} > input:focus + i,
		&#{$class} > input:focus + svg {
			color: map.get($form-text,"#{$type}-focus-icon");
		}
	}
	
}

// ---

div.xui-form-text.--icon-left {
	& > input {
		padding-left: 32px;
	}
}

div.xui-form-text.--icon-right {
	& > input {
		padding-right: 32px;
	}

	& > i,
	& > svg {
		left: auto;
		right: 4px;
	}
}

div.xui-form-text.--icon-left.--icon-right {

	& > i:nth-child(2),
	& > svg:nth-child(2) {
		left: 4px;
		right: auto;
	}

	& > i:nth-child(3),
	& > svg:nth-child(3) {
		left: auto;
		right: 4px;
	}
}

// ---

div.xui-form-text.--required {

	&::before {
		content: "";
		display: block;
		position: absolute;
		top: 3px;
		right: 3px;
		width: 8px;
		height: 8px;
		box-sizing: border-box;
		border-radius: 3px;
		overflow: hidden;
		background-color: map.get($form-text,"required");
		z-index: 1;
	}

	&.--disabled {
		background-color: map.get($form-text,"disabled-normal-bd");
	}

}

